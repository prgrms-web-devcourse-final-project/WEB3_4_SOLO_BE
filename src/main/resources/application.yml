spring:
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  session:
    store-type: jdbc
    jdbc:
      initialize-schema: always
    timeout: 1800
  main:
    allow-bean-definition-overriding: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID:dfbb49ef3546d43dae6f375358b0008e}
            client-secret: ${KAKAO_CLIENT_SECRET:tCi6WRWfWenBMrfbTaTH502WjYkHOsDI}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Kakao
            scope:
              - profile_nickname
              - profile_image
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  application:
    name: pleasybank-backend-kotlin

server:
  port: 8080
  servlet:
    context-path: /
    session:
      cookie:
        http-only: true
        secure: false
        same-site: lax
        name: KSESSION
        max-age: 1800
      timeout: 3600
      tracking-modes: cookie

logging:
  level:
    root: INFO
    com.pleasybank: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.web: DEBUG
    org.springframework.jdbc: DEBUG
    org.springframework.session: DEBUG

app:
  auth:
    tokenSecret: pleasy987654321pleasy987654321pleasy987654321pleasy987654321
    tokenExpirationMsec: 864000000
    refreshTokenExpirationMsec: 2592000000
  oauth2:
    authorizedRedirectUris:
      - http://localhost:8080/auth/token-display
  cors:
    allowed-origins: http://localhost:3000
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: Authorization,Content-Type,Accept
    max-age: 3600
    allow-credentials: true
  jwt:
    secret: ${JWT_SECRET:abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()}
    expiration: 86400000

# 금융결제원 오픈API 설정
openbanking:
  client-id: ${OPENBANKING_CLIENT_ID:test_client_id}
  client-secret: ${OPENBANKING_CLIENT_SECRET:test_client_secret}
  redirect-uri: ${OPENBANKING_REDIRECT_URI:http://localhost:8080/api/openbanking/callback}
  auth-url: ${OPENBANKING_AUTH_URL:https://testapi.openbanking.or.kr/oauth/2.0/authorize}
  token-url: ${OPENBANKING_TOKEN_URL:https://testapi.openbanking.or.kr/oauth/2.0/token}
  api-base-url: ${OPENBANKING_API_BASE_URL:https://testapi.openbanking.or.kr}

# Swagger UI 설정
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    groups-order: DESC
    operationsSorter: method
    tagsSorter: alpha
    disable-swagger-default-url: true
    display-request-duration: true
    configUrl: /api-docs/swagger-config
    urls:
      - url: /api-docs
        name: API 문서
        displayName: 플리지뱅크 API
  api-docs:
    path: /api-docs
    enabled: true
    groups:
      enabled: true
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  paths-to-match: /**