spring:
  datasource:
    url: jdbc:h2:mem:pleasybank
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true
  h2:
    console:
      enabled: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID:your-client-id}
            client-secret: ${KAKAO_CLIENT_SECRET:your-client-secret}
            redirect-uri: "{baseUrl}/api/auth/oauth2/callback/kakao"
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

# 로깅 설정
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# 서버 설정
server.port=8080
server.servlet.context-path=/api

# JWT 설정
jwt.secret=pleasyBankSecretKey123456789012345678901234567890123456789012345678901234567890
jwt.expiration=86400000
jwt.refresh-expiration=604800000

app:
  auth:
    token-secret: ${JWT_SECRET:pleasyBankSecretKey012345678901234567890123456789}
    token-expiration-ms: 3600000  # 1 hour
    refresh-token-expiration-ms: 2592000000  # 30 days
  oauth2:
    authorized-redirect-uris:
      - http://localhost:3000/oauth2/redirect