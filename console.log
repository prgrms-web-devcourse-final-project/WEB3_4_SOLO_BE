Starting a Gradle Daemon, 1 busy and 1 incompatible Daemons could not be reused, use --status for details
> Task :checkKotlinGradlePluginConfigurationErrors
> Task :compileKotlin UP-TO-DATE
> Task :compileJava NO-SOURCE
> Task :processResources UP-TO-DATE
> Task :classes UP-TO-DATE
> Task :resolveMainClassName UP-TO-DATE

> Task :bootRun

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
[32m :: Spring Boot :: [39m              [2m (v3.2.0)[0;39m

[2m2025-04-01T21:02:01.007+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mcom.pleasybank.ApplicationKt            [0;39m [2m:[0;39m Starting ApplicationKt using Java 23.0.2 with PID 39363 (/Users/jinkyuseok/Downloads/pleasybank/pleasybank-backend-kotlin/build/classes/kotlin/main started by jinkyuseok in /Users/jinkyuseok/Downloads/pleasybank/pleasybank-backend-kotlin)
[2m2025-04-01T21:02:01.007+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mcom.pleasybank.ApplicationKt            [0;39m [2m:[0;39m Running with Spring Boot v3.2.0, Spring v6.1.1
[2m2025-04-01T21:02:01.008+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mcom.pleasybank.ApplicationKt            [0;39m [2m:[0;39m No active profile set, falling back to 1 default profile: "default"
[2m2025-04-01T21:02:01.360+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2m2025-04-01T21:02:01.394+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36m.s.d.r.c.RepositoryConfigurationDelegate[0;39m [2m:[0;39m Finished Spring Data repository scanning in 30 ms. Found 10 JPA repository interfaces.
[2m2025-04-01T21:02:01.600+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mo.s.b.w.embedded.tomcat.TomcatWebServer [0;39m [2m:[0;39m Tomcat initialized with port 8080 (http)
[2m2025-04-01T21:02:01.604+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mo.apache.catalina.core.StandardService  [0;39m [2m:[0;39m Starting service [Tomcat]
[2m2025-04-01T21:02:01.604+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mo.apache.catalina.core.StandardEngine   [0;39m [2m:[0;39m Starting Servlet engine: [Apache Tomcat/10.1.16]
[2m2025-04-01T21:02:01.626+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mo.a.c.c.C.[Tomcat].[localhost].[/]      [0;39m [2m:[0;39m Initializing Spring embedded WebApplicationContext
[2m2025-04-01T21:02:01.626+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mw.s.c.ServletWebServerApplicationContext[0;39m [2m:[0;39m Root WebApplicationContext: initialization completed in 598 ms
[2m2025-04-01T21:02:01.637+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Starting...
[2m2025-04-01T21:02:01.705+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mcom.zaxxer.hikari.pool.HikariPool       [0;39m [2m:[0;39m HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:pleasybank user=SA
[2m2025-04-01T21:02:01.706+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Start completed.
[2m2025-04-01T21:02:01.710+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mo.s.b.a.h2.H2ConsoleAutoConfiguration   [0;39m [2m:[0;39m H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:pleasybank'
[2m2025-04-01T21:02:01.758+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mo.hibernate.jpa.internal.util.LogHelper [0;39m [2m:[0;39m HHH000204: Processing PersistenceUnitInfo [name: default]
[2m2025-04-01T21:02:01.780+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.Version                   [0;39m [2m:[0;39m HHH000412: Hibernate ORM core version 6.3.1.Final
[2m2025-04-01T21:02:01.791+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mo.h.c.internal.RegionFactoryInitiator   [0;39m [2m:[0;39m HHH000026: Second-level cache disabled
[2m2025-04-01T21:02:01.870+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mo.s.o.j.p.SpringPersistenceUnitInfo     [0;39m [2m:[0;39m No LoadTimeWeaver setup: ignoring JPA class transformer
[2m2025-04-01T21:02:01.885+09:00[0;39m [33m WARN[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.orm.deprecation           [0;39m [2m:[0;39m HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
[2m2025-04-01T21:02:02.198+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mo.h.e.t.j.p.i.JtaPlatformInitiator      [0;39m [2m:[0;39m HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[2m2025-04-01T21:02:02.204+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists accounts cascade 
Hibernate: 
    drop table if exists accounts cascade 
[2m2025-04-01T21:02:02.205+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists notification_settings cascade 
Hibernate: 
    drop table if exists notification_settings cascade 
[2m2025-04-01T21:02:02.205+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists notifications cascade 
Hibernate: 
    drop table if exists notifications cascade 
[2m2025-04-01T21:02:02.205+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists oauth_providers cascade 
Hibernate: 
    drop table if exists oauth_providers cascade 
[2m2025-04-01T21:02:02.205+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists password_resets cascade 
Hibernate: 
    drop table if exists password_resets cascade 
[2m2025-04-01T21:02:02.206+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists scheduled_transactions cascade 
Hibernate: 
    drop table if exists scheduled_transactions cascade 
[2m2025-04-01T21:02:02.206+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists transactions cascade 
Hibernate: 
    drop table if exists transactions cascade 
[2m2025-04-01T21:02:02.206+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists user_authentications cascade 
Hibernate: 
    drop table if exists user_authentications cascade 
[2m2025-04-01T21:02:02.206+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists user_oauth cascade 
Hibernate: 
    drop table if exists user_oauth cascade 
[2m2025-04-01T21:02:02.206+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
[2m2025-04-01T21:02:02.208+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table accounts (
        balance numeric(19,4) not null,
        interest_rate numeric(38,2) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_activity_date timestamp(6),
        updated_at timestamp(6) not null,
        user_id bigint not null,
        account_name varchar(255) not null,
        account_number varchar(255) not null unique,
        account_type varchar(255) not null,
        currency varchar(255) not null,
        status varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table accounts (
        balance numeric(19,4) not null,
        interest_rate numeric(38,2) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_activity_date timestamp(6),
        updated_at timestamp(6) not null,
        user_id bigint not null,
        account_name varchar(255) not null,
        account_number varchar(255) not null unique,
        account_type varchar(255) not null,
        currency varchar(255) not null,
        status varchar(255) not null,
        primary key (id)
    )
[2m2025-04-01T21:02:02.212+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table notification_settings (
        email_enabled boolean not null,
        push_enabled boolean not null,
        sms_enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        category_settings varchar(255),
        primary key (id)
    )
Hibernate: 
    create table notification_settings (
        email_enabled boolean not null,
        push_enabled boolean not null,
        sms_enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        category_settings varchar(255),
        primary key (id)
    )
[2m2025-04-01T21:02:02.212+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table notifications (
        is_read boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        related_id bigint,
        user_id bigint not null,
        content varchar(255) not null,
        extra_data TEXT,
        notification_type varchar(255) not null,
        title varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table notifications (
        is_read boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        related_id bigint,
        user_id bigint not null,
        content varchar(255) not null,
        extra_data TEXT,
        notification_type varchar(255) not null,
        title varchar(255) not null,
        primary key (id)
    )
[2m2025-04-01T21:02:02.213+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table oauth_providers (
        is_active boolean not null,
        id bigint generated by default as identity,
        provider_name varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table oauth_providers (
        is_active boolean not null,
        id bigint generated by default as identity,
        provider_name varchar(255) not null unique,
        primary key (id)
    )
[2m2025-04-01T21:02:02.214+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table password_resets (
        is_used boolean not null,
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        id bigint generated by default as identity,
        user_id bigint not null,
        token varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table password_resets (
        is_used boolean not null,
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        id bigint generated by default as identity,
        user_id bigint not null,
        token varchar(255) not null unique,
        primary key (id)
    )
[2m2025-04-01T21:02:02.214+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table scheduled_transactions (
        amount numeric(38,2),
        is_recurring boolean not null,
        created_at timestamp(6),
        destination_account_id bigint,
        executed_at timestamp(6),
        id bigint generated by default as identity,
        scheduled_date timestamp(6),
        source_account_id bigint,
        updated_at timestamp(6),
        description varchar(255),
        recurring_period varchar(255),
        status varchar(255),
        primary key (id)
    )
Hibernate: 
    create table scheduled_transactions (
        amount numeric(38,2),
        is_recurring boolean not null,
        created_at timestamp(6),
        destination_account_id bigint,
        executed_at timestamp(6),
        id bigint generated by default as identity,
        scheduled_date timestamp(6),
        source_account_id bigint,
        updated_at timestamp(6),
        description varchar(255),
        recurring_period varchar(255),
        status varchar(255),
        primary key (id)
    )
[2m2025-04-01T21:02:02.215+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table transactions (
        amount numeric(19,4) not null,
        fee numeric(19,4) not null,
        total_amount numeric(19,4) not null,
        created_at timestamp(6) not null,
        destination_account_id bigint,
        id bigint generated by default as identity,
        related_transaction_id bigint,
        source_account_id bigint,
        transaction_date timestamp(6) not null,
        description varchar(255),
        reference_number varchar(255),
        status varchar(255) not null,
        transaction_number varchar(255) not null unique,
        transaction_type varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table transactions (
        amount numeric(19,4) not null,
        fee numeric(19,4) not null,
        total_amount numeric(19,4) not null,
        created_at timestamp(6) not null,
        destination_account_id bigint,
        id bigint generated by default as identity,
        related_transaction_id bigint,
        source_account_id bigint,
        transaction_date timestamp(6) not null,
        description varchar(255),
        reference_number varchar(255),
        status varchar(255) not null,
        transaction_number varchar(255) not null unique,
        transaction_type varchar(255) not null,
        primary key (id)
    )
[2m2025-04-01T21:02:02.215+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table user_authentications (
        is_enabled boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        user_id bigint not null,
        auth_type varchar(255) not null,
        auth_value varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table user_authentications (
        is_enabled boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        updated_at timestamp(6) not null,
        user_id bigint not null,
        auth_type varchar(255) not null,
        auth_value varchar(255) not null,
        primary key (id)
    )
[2m2025-04-01T21:02:02.216+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table user_oauth (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        provider_id bigint not null,
        token_expires_at timestamp(6),
        updated_at timestamp(6) not null,
        user_id bigint not null,
        access_token varchar(255),
        oauth_user_id varchar(255) not null,
        refresh_token varchar(255),
        primary key (id)
    )
Hibernate: 
    create table user_oauth (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        provider_id bigint not null,
        token_expires_at timestamp(6),
        updated_at timestamp(6) not null,
        user_id bigint not null,
        access_token varchar(255),
        oauth_user_id varchar(255) not null,
        refresh_token varchar(255),
        primary key (id)
    )
[2m2025-04-01T21:02:02.217+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    create table users (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_login_at timestamp(6),
        updated_at timestamp(6) not null,
        email varchar(255) not null unique,
        name varchar(255) not null,
        password varchar(255) not null,
        phone_number varchar(255),
        profile_image_url varchar(255),
        provider varchar(255) not null,
        provider_id varchar(255),
        role varchar(255) not null,
        status varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_login_at timestamp(6),
        updated_at timestamp(6) not null,
        email varchar(255) not null unique,
        name varchar(255) not null,
        password varchar(255) not null,
        phone_number varchar(255),
        profile_image_url varchar(255),
        provider varchar(255) not null,
        provider_id varchar(255),
        role varchar(255) not null,
        status varchar(255) not null,
        primary key (id)
    )
[2m2025-04-01T21:02:02.218+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists accounts 
       add constraint FKnjuop33mo69pd79ctplkck40n 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists accounts 
       add constraint FKnjuop33mo69pd79ctplkck40n 
       foreign key (user_id) 
       references users
[2m2025-04-01T21:02:02.223+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists notification_settings 
       add constraint FKmh6alfw96lc851ea0snhijfk 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists notification_settings 
       add constraint FKmh6alfw96lc851ea0snhijfk 
       foreign key (user_id) 
       references users
[2m2025-04-01T21:02:02.223+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists notifications 
       add constraint FK9y21adhxn0ayjhfocscqox7bh 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists notifications 
       add constraint FK9y21adhxn0ayjhfocscqox7bh 
       foreign key (user_id) 
       references users
[2m2025-04-01T21:02:02.224+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists password_resets 
       add constraint FKfy4ulhbvy3yguwnqqvts2iqqx 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists password_resets 
       add constraint FKfy4ulhbvy3yguwnqqvts2iqqx 
       foreign key (user_id) 
       references users
[2m2025-04-01T21:02:02.224+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists scheduled_transactions 
       add constraint FKrxtk43adecv4tu1bqk3xhnkf4 
       foreign key (destination_account_id) 
       references accounts
Hibernate: 
    alter table if exists scheduled_transactions 
       add constraint FKrxtk43adecv4tu1bqk3xhnkf4 
       foreign key (destination_account_id) 
       references accounts
[2m2025-04-01T21:02:02.225+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists scheduled_transactions 
       add constraint FKah4alkkx9bnqmeo7ka3314h54 
       foreign key (source_account_id) 
       references accounts
Hibernate: 
    alter table if exists scheduled_transactions 
       add constraint FKah4alkkx9bnqmeo7ka3314h54 
       foreign key (source_account_id) 
       references accounts
[2m2025-04-01T21:02:02.226+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists transactions 
       add constraint FK5598b948ilps8u4o3qvfo4j52 
       foreign key (destination_account_id) 
       references accounts
Hibernate: 
    alter table if exists transactions 
       add constraint FK5598b948ilps8u4o3qvfo4j52 
       foreign key (destination_account_id) 
       references accounts
[2m2025-04-01T21:02:02.227+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists transactions 
       add constraint FKgq8fytmk4xbr4pohsnu63lydq 
       foreign key (related_transaction_id) 
       references transactions
Hibernate: 
    alter table if exists transactions 
       add constraint FKgq8fytmk4xbr4pohsnu63lydq 
       foreign key (related_transaction_id) 
       references transactions
[2m2025-04-01T21:02:02.228+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists transactions 
       add constraint FKr5dnv4t6f45ltol1wu5u27cqu 
       foreign key (source_account_id) 
       references accounts
Hibernate: 
    alter table if exists transactions 
       add constraint FKr5dnv4t6f45ltol1wu5u27cqu 
       foreign key (source_account_id) 
       references accounts
[2m2025-04-01T21:02:02.229+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists user_authentications 
       add constraint FK7akre0eeoxbsppps6wujoh5ay 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists user_authentications 
       add constraint FK7akre0eeoxbsppps6wujoh5ay 
       foreign key (user_id) 
       references users
[2m2025-04-01T21:02:02.229+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists user_oauth 
       add constraint FK9ulbcmt0xfmlu7b3x3360u1im 
       foreign key (provider_id) 
       references oauth_providers
Hibernate: 
    alter table if exists user_oauth 
       add constraint FK9ulbcmt0xfmlu7b3x3360u1im 
       foreign key (provider_id) 
       references oauth_providers
[2m2025-04-01T21:02:02.229+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    alter table if exists user_oauth 
       add constraint FKrehn7hnmnbnie1fu849n8ss9t 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists user_oauth 
       add constraint FKrehn7hnmnbnie1fu849n8ss9t 
       foreign key (user_id) 
       references users
[2m2025-04-01T21:02:02.231+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Initialized JPA EntityManagerFactory for persistence unit 'default'
[2m2025-04-01T21:02:02.464+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mo.s.d.j.r.query.QueryEnhancerFactory    [0;39m [2m:[0;39m Hibernate is in classpath; If applicable, HQL parser will be used.
[2m2025-04-01T21:02:02.874+09:00[0;39m [33m WARN[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mJpaBaseConfiguration$JpaWebConfiguration[0;39m [2m:[0;39m spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2m2025-04-01T21:02:02.880+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mswordEncoderAuthenticationManagerBuilder[0;39m [2m:[0;39m No authenticationProviders and no parentAuthenticationManager defined. Returning null.
[2m2025-04-01T21:02:02.981+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mo.s.s.web.DefaultSecurityFilterChain    [0;39m [2m:[0;39m Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@10de92aa, org.springframework.security.web.session.ForceEagerSessionCreationFilter@9c53820, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7f218b0c, org.springframework.security.web.context.SecurityContextHolderFilter@d6ff21e, org.springframework.security.web.header.HeaderWriterFilter@3cb303d9, org.springframework.web.filter.CorsFilter@78171169, org.springframework.security.web.authentication.logout.LogoutFilter@1278c48f, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@6fd14e7c, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@229762ab, com.pleasybank.security.jwt.JwtAuthenticationFilter@1c388703, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@41058886, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@3c1ca89c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@627ed93a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@157312, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f162df8, org.springframework.security.web.session.SessionManagementFilter@3b3d7eb6, org.springframework.security.web.access.ExceptionTranslationFilter@1dabeb92, org.springframework.security.web.access.intercept.AuthorizationFilter@718fb7a2]
[2m2025-04-01T21:02:03.122+09:00[0;39m [33m WARN[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mConfigServletWebServerApplicationContext[0;39m [2m:[0;39m Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
[2m2025-04-01T21:02:03.124+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mj.LocalContainerEntityManagerFactoryBean[0;39m [2m:[0;39m Closing JPA EntityManagerFactory for persistence unit 'default'
[2m2025-04-01T21:02:03.124+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists accounts cascade 
Hibernate: 
    drop table if exists accounts cascade 
[2m2025-04-01T21:02:03.125+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists notification_settings cascade 
Hibernate: 
    drop table if exists notification_settings cascade 
[2m2025-04-01T21:02:03.125+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists notifications cascade 
Hibernate: 
    drop table if exists notifications cascade 
[2m2025-04-01T21:02:03.125+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists oauth_providers cascade 
Hibernate: 
    drop table if exists oauth_providers cascade 
[2m2025-04-01T21:02:03.125+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists password_resets cascade 
Hibernate: 
    drop table if exists password_resets cascade 
[2m2025-04-01T21:02:03.126+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists scheduled_transactions cascade 
Hibernate: 
    drop table if exists scheduled_transactions cascade 
[2m2025-04-01T21:02:03.126+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists transactions cascade 
Hibernate: 
    drop table if exists transactions cascade 
[2m2025-04-01T21:02:03.126+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists user_authentications cascade 
Hibernate: 
    drop table if exists user_authentications cascade 
[2m2025-04-01T21:02:03.126+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists user_oauth cascade 
Hibernate: 
    drop table if exists user_oauth cascade 
[2m2025-04-01T21:02:03.127+09:00[0;39m [32mDEBUG[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36morg.hibernate.SQL                       [0;39m [2m:[0;39m 
    drop table if exists users cascade 
Hibernate: 
    drop table if exists users cascade 
[2m2025-04-01T21:02:03.128+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Shutdown initiated...
[2m2025-04-01T21:02:03.128+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mcom.zaxxer.hikari.HikariDataSource      [0;39m [2m:[0;39m HikariPool-1 - Shutdown completed.
[2m2025-04-01T21:02:03.134+09:00[0;39m [32m INFO[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36m.s.b.a.l.ConditionEvaluationReportLogger[0;39m [2m:[0;39m 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2m2025-04-01T21:02:03.140+09:00[0;39m [31mERROR[0;39m [35m39363[0;39m [2m---[0;39m [2m[           main][0;39m [2m[0;39m[36mo.s.b.d.LoggingFailureAnalysisReporter  [0;39m [2m:[0;39m 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.


> Task :bootRun FAILED

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':bootRun'.
> Process 'command '/Users/jinkyuseok/Library/Java/JavaVirtualMachines/openjdk-23.0.2/Contents/Home/bin/java'' finished with non-zero exit value 1

* Try:
> Run with --stacktrace option to get the stack trace.
> Run with --info or --debug option to get more log output.
> Run with --scan to get full insights.
> Get more help at https://help.gradle.org.

Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.

You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.

For more on this, please refer to https://docs.gradle.org/8.10/userguide/command_line_interface.html#sec:command_line_warnings in the Gradle documentation.

BUILD FAILED in 9s
5 actionable tasks: 2 executed, 3 up-to-date
Exception in thread "Thread-3" org.gradle.api.UncheckedIOException: java.io.IOException: Input/output error